#!/usr/local/git/perl/bin/perl
#
# Copyright  (c) 2001,2002  Oracle Corporation All rights reserved
# Author: Vijay Swamidass
#
#  $Id: repdir,v 1.3 2002/07/03 00:11:12 vswamida Exp $
#
#  $Log: repdir,v $
#  Revision 1.3  2002/07/03 00:11:12  vswamida
#  Instead of creating the actual files and directories, we now create a file that
#  lists the files, directories and their type (char, link, dir, regular).
#  blddir takes the file and builds the directory.
#
#  Revision 1.2  2002/06/28 20:47:31  vswamida
#  Commented out mknod command to enable non root users to use maketest.
#
#  Revision 1.1  2002/06/20 22:23:37  vswamida
#  Creates a replica of a given directory structure.  Files are recreated with 0 bytes and links are preserved.
#
#

use strict;
use warnings;

die "Usage: repdir <source> <dest>" if not ($ARGV[0] and $ARGV[1]);

my $DIR = $ARGV[0];
my $TARGETDIR = $ARGV[1];

die "Source directory not found." if not -d $DIR;
die "Target directory not found." if not -d $TARGETDIR;

# Generate a list of directories, files and links
my @nodes = `find $DIR -print`;

# This does the equivalent of the UNIX 'touch' command
sub touch {
        my $now = time;
 	local (*TMP);
        foreach my $file (@_) {
                utime ($now, $now, $file)
                || open (TMP, ">>$file")
                || warn ("Couldn't touch file: $!\n");
        }
} 
 
$DIR =~ s/\n//g;
$DIR =~ s/\//_/g;

open (OUT,">$TARGETDIR/$DIR.list");
foreach (@nodes) {

	s/(\n|^\/)//g;
	my $node = "/$_";
	my $type;
	my $link = "";
	$link = readlink($node) if -l $node;

	if ( -d $node) {
		$type = 'd';
	}
	elsif ( $link) {
		$type = 'l';
	}
	elsif ( -c $node) {
		$type = 'c';
	}
	else {
		$type = 'r';
	}

	print OUT "$_!$type!$link\n";
} 
close OUT;
exit;
